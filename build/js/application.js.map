{"version":3,"file":"application.js","sources":["js/getElement.js","js/view/abstractView.js","js/intro/introScreenView.js","js/showScreen.js","js/intro/rulesScreenView.js","js/header/headerView.js","js/intro/introScreenController.js","js/config/config.js","js/templates/gameStats.js","js/resize/resize.js","js/game/firstGameScreenView.js","js/game/secondGameScreenView.js","js/game/thirdGameScreenView.js","js/game/gameScreenController.js","js/countPoints.js","js/stats/statsScreenView.js","js/stats/statsScreenController.js","js/model/abstractModel.js","js/model/model.js","js/loadImage.js","js/application.js"],"sourcesContent":["const getElementFromTemplate = (template) => {\n  const div = document.createElement(`div`);\n\n  div.innerHTML = template;\n\n  return div.children.length > 1 ? div : div.firstElementChild;\n};\n\nexport default getElementFromTemplate;\n","import getElementFromTemplate from '../getElement';\n\nclass AbstractView {\n  get template() {\n    throw new Error(`You have to define template`);\n  }\n\n  get frame() {\n    throw new Error(`You have to define frame dimensions`);\n  }\n\n  _render() {\n    return getElementFromTemplate(this.template.trim());\n  }\n\n  _bind() {}\n\n  get element() {\n    if (!this._element) {\n      this._element = this._render();\n      this._bind();\n    }\n\n    return this._element;\n  }\n}\n\nexport default AbstractView;\n","import abstractView from '../view/abstractView';\n\nclass IntroScreenView extends abstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `\n      <div id=\"main\" class=\"central__content\">\n        <div id=\"intro\" class=\"intro intro--hidden\">\n          <h1 class=\"intro__asterisk\">*</h1>\n          <p class=\"intro__motto\"><sup>*</sup> Это не фото. Это рисунок маслом нидерландского художника-фотореалиста Tjalf Sparnaay.</p>\n        </div>\n      </div>\n      <div class=\"greeting central--blur\">\n        <div class=\"greeting__logo\"><img src=\"img/logo_big.png\" width=\"201\" height=\"89\" alt=\"Pixel Hunter\"></div>\n        <h1 class=\"greeting__asterisk\">*</h1>\n        <div class=\"greeting__challenge\">\n          <h3>Лучшие художники-фотореалисты бросают&nbsp;тебе&nbsp;вызов!</h3>\n          <p>Правила игры просты.<br> Нужно отличить рисунок&nbsp;от фотографии и сделать выбор.<br> Задача кажется тривиальной,\n            но не думай, что все так просто.<br> Фотореализм обманчив и коварен.<br> Помни, главное — смотреть очень внимательно.</p>\n        </div>\n        <div class=\"greeting__continue\"><span><img src=\"img/arrow_right.svg\" width=\"64\" height=\"64\" alt=\"Next\"></span></div>\n      </div>\n    `;\n  }\n\n  _bind() {\n    const greeting = this.element.querySelector(`.greeting`);\n    const button = this.element.querySelector(`.greeting__continue`);\n\n    button.addEventListener(`click`, () => {\n      this.continueHandler();\n      greeting.classList.remove(`greeting--active`);\n    });\n  }\n\n  showWelcome() {\n    const greeting = this.element.querySelector(`.greeting`);\n\n    greeting.classList.remove(`greeting--hidden`);\n  }\n\n  hideWelcome() {\n    const greeting = this.element.querySelector(`.greeting`);\n\n    greeting.classList.add(`greeting--hidden`);\n  }\n\n  show() {\n    const intro = this.element.querySelector(`.intro--hidden`);\n\n    intro.classList.remove(`intro--hidden`);\n  }\n\n  hide() {\n    const intro = this.element.querySelector(`.intro`);\n\n    intro.classList.add(`intro--hidden`);\n  }\n\n  continueHandler() {}\n}\n\nexport default IntroScreenView;\n","const main = document.querySelector(`.central`);\nconst header = main.querySelector(`.header`);\nconst mainGameScreen = main.querySelector(`#app`);\n\nconst showScreen = (screen, headerContent) => {\n  header.innerHTML = ``;\n  mainGameScreen.innerHTML = ``;\n  mainGameScreen.appendChild(screen);\n\n  if (headerContent) {\n    header.appendChild(headerContent);\n  }\n};\n\nexport default showScreen;\n","import abstractView from '../view/abstractView';\n\nclass RulesScreenView extends abstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `\n      <div class=\"rules\">\n        <h1 class=\"rules__title\">Правила</h1>\n        <p class=\"rules__description\">Угадай 10 раз для каждого изображения фото <img src=\"img/photo_icon.png\" width=\"16\" height=\"16\"> или рисунок <img src=\"img/paint_icon.png\"\n            width=\"16\" height=\"16\" alt=\"\">.<br> Фотографиями или рисунками могут быть оба изображения.<br> На каждую попытку\n          отводится 30 секунд.<br> Ошибиться можно не более 3 раз.<br>\n          <br> Готовы?\n        </p>\n        <form class=\"rules__form\">\n          <input class=\"rules__input\" type=\"text\" placeholder=\"Ваше Имя\">\n          <button class=\"rules__button  continue\" type=\"submit\" disabled>Go!</button>\n        </form>\n      </div>\n    `;\n  }\n\n  _bind() {\n    const form = this.element.querySelector(`.rules__form`);\n    const input = form.querySelector(`.rules__input`);\n    const button = form.querySelector(`.rules__button`);\n\n    input.addEventListener(`input`, (evt) => {\n      button.disabled = evt.target.value ? false : true;\n    });\n\n    form.addEventListener(`submit`, (evt) => {\n      evt.preventDefault();\n\n      this.formSubmitHandler(input.value);\n    });\n  }\n\n  formSubmitHandler() {}\n}\n\nexport default RulesScreenView;\n","import abstractView from '../view/abstractView';\nclass HeaderView extends abstractView {\n  constructor(state) {\n    super();\n    this.state = state;\n  }\n\n  get template() {\n    const headerStateTemplate = (state) => `\n      <h1 class=\"game__timer\">${state.time}</h1>\n      <div class=\"game__lives\">\n        ${new Array(3 - state.lives)\n      .fill(`<img src=\"img/heart__empty.svg\" class=\"game__heart\" alt=\"Life\" width=\"32\" height=\"32\">`)\n      .join(``)}\n        ${new Array(state.lives)\n      .fill(`<img src=\"img/heart__full.svg\" class=\"game__heart\" alt=\"Life\" width=\"32\" height=\"32\">`)\n      .join(``)}\n      </div>\n    `;\n    return `\n      <div class=\"header__back\">\n        <button class=\"back\">\n          <img src=\"img/arrow_left.svg\" width=\"45\" height=\"45\" alt=\"Back\">\n          <img src=\"img/logo_small.svg\" width=\"101\" height=\"44\">\n        </button>\n      </div>\n      ${(this.state) ? headerStateTemplate(this.state) : ``}\n    `;\n  }\n\n  get element() {\n    if (!this._element) {\n      this._element = this._render();\n      this._bind();\n      this._startTimer();\n    }\n\n    return this._element;\n  }\n\n  _bind() {\n    const back = this.element.querySelector(`.back`);\n\n\n    back.addEventListener(`click`, () => this.backClickHandler());\n  }\n\n  _startTimer() {\n    const gameTimer = this.element.querySelector(`.game__timer`);\n\n    if (!gameTimer) {\n      return false;\n    }\n    const timer = {\n      leftTime: this.state.time,\n      isActive: true,\n      tick() {\n        this.leftTime--;\n        if (!this.leftTime) {\n          this.isActive = false;\n        }\n      }\n    };\n    this.timer = setInterval(() => {\n      if (!timer.isActive) {\n        this.stopTimer();\n        this.finishTimeHandler(false);\n      } else {\n        timer.tick();\n        this.changeTimeHandler(timer.leftTime);\n        gameTimer.textContent = timer.leftTime;\n      }\n    }, 1000);\n\n    return this.timer;\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n  }\n\n  backClickHandler() {}\n\n  finishTimeHandler() {}\n\n  changeTimeHandler() {}\n}\n\nexport default HeaderView;\n","import IntroScreenView from './introScreenView';\nimport showScreen from '../showScreen';\nimport RulesScreenView from './rulesScreenView';\nimport HeaderView from '../header/headerView';\n\nclass IntroScreenController {\n  constructor(application) {\n    this.application = application;\n    this.header = new HeaderView();\n    this.rulesScreen = new RulesScreenView();\n    this.introScreen = new IntroScreenView();\n  }\n\n  init() {\n    this.introScreen.continueHandler = () => this.renderRulesScreen();\n\n    showScreen(this.introScreen.element);\n  }\n\n  showPreloader() {\n    this.introScreen.show();\n  }\n\n  hidePreloader() {\n    this.introScreen.hide();\n  }\n\n  hideGreetingsScreen() {\n    this.introScreen.hideWelcome();\n  }\n\n  showGreetingsScreen() {\n    this.introScreen.showWelcome();\n  }\n\n  renderRulesScreen() {\n    this.header.backClickHandler = () => this.application.showIntro();\n    this.rulesScreen.formSubmitHandler = (name) => this.application.showGame(name);\n\n    showScreen(this.rulesScreen.element, this.header.element);\n  }\n}\n\nexport default IntroScreenController;\n","const NUM_OF_LIVES = 3;\nconst TIME_PER_SCREEN = 30;\nconst POINTS_FOR_RIGHT_ANSWER = 100;\nconst BONUS_POINTS_FOR_SPEED = 50;\nconst BONUS_POINTS_FOR_LIVE = 50;\nconst PENALTY_FOR_SLOWNESS = 50;\nconst SLOW_ANSWER_TIME_BOTTOM_LIMIT = 20;\nconst FAST_ASWER_TIME_UPPER_LIMIT = 10;\nconst NUM_OF_QUESTIONS = 10;\nconst API_URL = `https://es.dump.academy/pixel-hunter`;\n\nconst QuestionType = {\n  TWO_OF_TWO: `two-of-two`,\n  TINDER_LIKE: `tinder-like`,\n  ONE_OF_THREE: `one-of-three`\n};\n\nconst Answer = {\n  FAIL: `fail`,\n  SLOW: `slow`,\n  NORMAL: `right`,\n  FAST: `fast`\n};\nconst Result = {\n  LOSS: `loss`,\n  WIN: `win`\n};\n\nconst AnswerType = {\n  PAINTING: `painting`,\n  PHOTO: `photo`\n};\n\nexport {\n  NUM_OF_LIVES,\n  TIME_PER_SCREEN,\n  POINTS_FOR_RIGHT_ANSWER,\n  BONUS_POINTS_FOR_SPEED,\n  BONUS_POINTS_FOR_LIVE,\n  PENALTY_FOR_SLOWNESS,\n  SLOW_ANSWER_TIME_BOTTOM_LIMIT,\n  FAST_ASWER_TIME_UPPER_LIMIT,\n  NUM_OF_QUESTIONS,\n  API_URL,\n  QuestionType,\n  AnswerType,\n  Answer,\n  Result\n};\n","import * as constants from '../config/config';\n\nconst router = {\n  [constants.Answer.SLOW]: `<li class=\"stats__result stats__result--slow\"></li>`,\n  [constants.Answer.NORMAL]: `<li class=\"stats__result stats__result--correct\"></li>`,\n  [constants.Answer.FAST]: `<li class=\"stats__result stats__result--fast\"></li>`,\n  [constants.Answer.FAIL]: `<li class=\"stats__result stats__result--wrong\"></li>`\n};\n\nconst gameStats = (answers) => `\n  <ul class=\"stats\">\n    ${answers.map((answer) => router[answer]).join(``)}\n    ${new Array(constants.NUM_OF_QUESTIONS - answers.length)\n      .fill(`<li class=\"stats__result stats__result--unknown\"></li>`)\n      .join(``)}\n  </ul>\n`;\n\nexport default gameStats;\n","const resize = (frame, given) => {\n  if (!given) {\n    return frame;\n  }\n\n  const ratio = given.width / given.height;\n  const outOffsetWidth = given.width - frame.width;\n  const outOffsetHeight = given.height - frame.height;\n  const result = {};\n\n  if (outOffsetWidth >= outOffsetHeight) {\n    result.width = frame.width;\n    result.height = Math.round(result.width / ratio);\n  } else {\n    result.height = frame.height;\n    result.width = Math.round(result.height * ratio);\n  }\n\n  return result;\n};\n\nexport default resize;\n","import abstractView from '../view/abstractView';\nimport gameStats from '../templates/gameStats';\nimport * as constants from '../config/config';\nimport resize from '../resize/resize';\n\nclass FirstGameScreenView extends abstractView {\n  constructor(state) {\n    super();\n    this.state = state;\n  }\n\n  get frame() {\n    return {\n      width: 468,\n      height: 458\n    };\n  }\n\n  get template() {\n    const game = this.state.questions[this.state.questionNumber];\n\n    const question = (item, index) => {\n      const imageData = this.state.imagesData.find((image) => image.url === item.image.url);\n      const width = imageData.width;\n      const height = imageData.height;\n      const dimensions = resize(this.frame, {width, height});\n\n      return `\n        <div class=\"game__option\">\n          <img src=${item.image.url} alt=\"Option ${index}\" width=${dimensions.width} height=${dimensions.height}>\n          <label class=\"game__answer  game__answer--photo\">\n            <input name=\"question${index + 1}\" type=\"radio\" value=${constants.AnswerType.PHOTO}>\n            <span>Фото</span>\n          </label>\n          <label class=\"game__answer  game__answer--paint\">\n            <input name=\"question${index + 1}\" type=\"radio\" value=${constants.AnswerType.PAINTING}>\n            <span>Рисунок</span>\n          </label>\n        </div>\n      `;\n    };\n\n    return `\n      <div class=\"game\">\n        <p class=\"game__task\">${game.question}</p>\n        <form class=\"game__content\">\n          ${game.answers.map(question).join(``)}\n        </form>\n        <div class=\"stats\">${gameStats(this.state.answers).trim()}</div>\n      </div>\n    `;\n  }\n\n  _bind() {\n    const form = this.element.querySelector(`.game__content`);\n    const inputs = form.querySelectorAll(`input[type=\"radio\"]`);\n\n    [...inputs].forEach((input) => input.addEventListener(`change`, () => {\n      const value1 = form.question1.value;\n      const value2 = form.question2.value;\n\n      if (!(value1 && value2)) {\n        return false;\n      }\n\n      const game = this.state.questions[this.state.questionNumber];\n      const answer = value1 === game.answers[0][`type`] && value2 === game.answers[1][`type`];\n\n      this.answerHandler(answer);\n\n      return answer;\n    }));\n  }\n\n  answerHandler() {}\n}\n\nexport default FirstGameScreenView;\n","import abstractView from '../view/abstractView';\nimport gameStats from '../templates/gameStats';\nimport * as constants from '../config/config';\nimport resize from '../resize/resize';\n\nclass SecondGameScreenView extends abstractView {\n  constructor(state) {\n    super();\n    this.state = state;\n  }\n\n  get frame() {\n    return {\n      width: 705,\n      height: 455\n    };\n  }\n\n  get template() {\n    const game = this.state.questions[this.state.questionNumber];\n    const imageData = this.state.imagesData.find((image) => image.url === game.answers[0].image.url);\n    const width = imageData.width;\n    const height = imageData.height;\n    const dimensions = resize(this.frame, {width, height});\n\n    return `\n      <div class=\"game\">\n        <p class=\"game__task\">${game.question}</p>\n        <form class=\"game__content  game__content--wide\">\n          <div class=\"game__option\">\n            <img src=${game.answers[0].image.url} alt=\"Option 1\" width=${dimensions.width} height=${dimensions.height}>\n            <label class=\"game__answer  game__answer--photo\">\n              <input name=\"question1\" type=\"radio\" value=${constants.AnswerType.PHOTO}>\n              <span>Фото</span>\n            </label>\n            <label class=\"game__answer  game__answer--wide  game__answer--paint\">\n              <input name=\"question1\" type=\"radio\" value=${constants.AnswerType.PAINTING}>\n              <span>Рисунок</span>\n            </label>\n          </div>\n        </form>\n        <div class=\"stats\">${gameStats(this.state.answers)}</div>\n      </div>\n    `;\n  }\n\n  _bind() {\n    const form = this.element.querySelector(`.game__content--wide`);\n    const answers = form.querySelectorAll(`input[name=\"question1\"]`);\n    const game = this.state.questions[this.state.questionNumber];\n\n    [...answers].forEach((item) => item.addEventListener(`change`, () => {\n      const answer = form.question1.value === game.answers[0].type;\n\n      this.answerHandler(answer);\n    }));\n  }\n\n  answerHandler() {}\n}\n\nexport default SecondGameScreenView;\n","import abstractView from '../view/abstractView';\nimport gameStats from '../templates/gameStats';\nimport resize from '../resize/resize';\n\nclass ThirdGameScreenView extends abstractView {\n  constructor(state) {\n    super();\n    this.state = state;\n  }\n\n  get frame() {\n    return {\n      width: 304,\n      height: 455\n    };\n  }\n\n  get template() {\n    const game = this.state.questions[this.state.questionNumber];\n    const question = (item, index) => {\n      const imageData = this.state.imagesData.find((image) => image.url === item.image.url);\n      const width = imageData.width;\n      const height = imageData.height;\n      const dimensions = resize(this.frame, {width, height});\n\n      return `\n        <div class=\"game__option\">\n          <img src=${item.image.url} alt=\"Option ${index + 1}\" width=${dimensions.width} height=${dimensions.height}>\n        </div>\n      `;\n    };\n\n    return `\n      <div class=\"game\">\n        <p class=\"game__task\">${game.question}</p>\n        <form class=\"game__content  game__content--triple\">\n          ${game.answers.map(question).join(``)}\n        </form>\n        <div class=\"stats\">${gameStats(this.state.answers)}</div>\n      </div>\n    `;\n  }\n\n  _bind() {\n    const options = this.element.querySelectorAll(`.game__option`);\n    const game = this.state.questions[this.state.questionNumber];\n\n    [...options].forEach((option) => option.addEventListener(`click`, (evt) => {\n      const target = evt.target;\n      const answers = game.answers;\n      let type = answers[0].type;\n\n      for (let i = 1; i < answers.length; i++) {\n        if (answers[i].type === type) {\n          type = answers.find((item) => item.type !== type).type;\n          break;\n        }\n      }\n\n      const answer = [...options].indexOf(target) === game.answers.findIndex((item) => item.type === type);\n\n      this.answerHandler(answer);\n    }));\n  }\n\n  answerHandler() {}\n}\n\nexport default ThirdGameScreenView;\n","import HeaderView from '../header/headerView';\nimport showScreen from '../showScreen';\nimport FirstGameScreenView from '../game/firstGameScreenView';\nimport SecondGameScreenView from '../game/secondGameScreenView';\nimport ThirdGameScreenView from '../game/thirdGameScreenView';\nimport * as constants from '../config/config';\n\nclass GameScreenController {\n  constructor(application) {\n    this.application = application;\n    this.model = application.model;\n\n    this.routes = {\n      [constants.QuestionType.TWO_OF_TWO]: FirstGameScreenView,\n      [constants.QuestionType.TINDER_LIKE]: SecondGameScreenView,\n      [constants.QuestionType.ONE_OF_THREE]: ThirdGameScreenView\n    };\n  }\n\n  initHeader() {\n    const headerElement = new HeaderView(this.model.state);\n\n    headerElement.backClickHandler = () => {\n      this.model.resetState(this.model.state.questions);\n      this.application.showIntro();\n    };\n    headerElement.changeTimeHandler = (time) => this.changeTime(time);\n    headerElement.finishTimeHandler = (answer) => this.finishTime(answer);\n\n    this.header = headerElement;\n  }\n\n  get screen() {\n    if (!this._screen) {\n      this._screen = this.initScreen();\n    }\n\n    return this._screen;\n  }\n\n  set screen(scr) {\n    this._screen = scr;\n  }\n\n  changeTime(time) {\n    this.model.state = Object.assign({}, this.model.state, {time});\n\n    return this.model.state;\n  }\n\n  finishTime(answer) {\n    this.continueGameHandler(answer);\n  }\n\n  initScreen() {\n    const game = this.model.state.questions[this.model.state.questionNumber];\n\n    return new this.routes[game.type](this.model.state);\n  }\n\n  init() {\n    this.checkGameStatus(this.model.state);\n  }\n\n  checkGameStatus() {\n    if (this.model.state.result) {\n      this.application.showStats();\n    } else {\n      this.continueGame();\n    }\n  }\n\n  continueGame() {\n    this.screen = this.initScreen();\n    this.screen.answerHandler = (answer) => this.continueGameHandler(answer);\n    this.initHeader();\n\n    showScreen(this.screen.element, this.header.element);\n  }\n\n  continueGameHandler(answer) {\n    this.header.stopTimer();\n    this.model.changeState(answer);\n    this.checkGameStatus();\n  }\n}\n\nexport default GameScreenController;\n","import * as constants from './config/config';\n\nconst countPoints = (answers, lives) => {\n  const result = {\n    total: 0,\n    rightAnswerPoints: 0,\n    speedBonus: 0,\n    livesBonus: 0,\n    slowPenalty: 0\n  };\n\n  for (const answer of answers) {\n    if (!answer) {\n      continue;\n    }\n\n    result.rightAnswerPoints += constants.POINTS_FOR_RIGHT_ANSWER;\n\n    switch (answer) {\n      case constants.Answer.FAST: {\n        result.speedBonus += constants.BONUS_POINTS_FOR_SPEED;\n        break;\n      }\n      case constants.Answer.SLOW: {\n        result.slowPenalty += constants.PENALTY_FOR_SLOWNESS;\n      }\n    }\n  }\n\n  result.livesBonus = lives * constants.BONUS_POINTS_FOR_LIVE;\n  result.total = result.rightAnswerPoints + result.speedBonus + result.livesBonus - result.slowPenalty;\n\n  return result;\n};\n\nexport default countPoints;\n","import abstractView from '../view/abstractView';\nimport gameStats from '../templates/gameStats';\nimport countPoints from '../countPoints';\nimport * as constants from '../config/config';\n\nclass StatsScreenView extends abstractView {\n  constructor(state) {\n    super();\n    this.state = state;\n  }\n\n  get template() {\n    const points = countPoints(this.state.answers, this.state.lives);\n\n    const resultTable = (results, index) => {\n      const result = results.lives ? countPoints(results.stats, results.lives).total : `FAIL`;\n\n      return `\n        <table class=\"result__table\">\n          <tr>\n            <td class=\"result__number\">${index + 2}.</td>\n            <td colspan=\"2\">\n              ${gameStats(results.stats)}\n            </td>\n            <td class=\"result__total--final\">${result}</td>\n          </tr>\n        </table>\n      `;\n    };\n\n    return `\n      <div class=\"result\">\n        <h1>${this.state.result === constants.Result.WIN ? `Победа!` : `Вы проиграли!`}</h1>\n        <table class=\"result__table\">\n          <tr>\n            <td class=\"result__number\">1.</td>\n            <td colspan=\"2\">\n              ${gameStats(this.state.answers)}\n            </td>\n            <td class=\"result__points\">×&nbsp;${constants.POINTS_FOR_RIGHT_ANSWER}</td>\n            <td class=\"result__total\">${this.state.result === constants.Result.WIN ? points.rightAnswerPoints : `FAIL`}</td>\n          </tr>\n          ${this.state.result === constants.Result.WIN\n    ? `\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Бонус за скорость:</td>\n          <td class=\"result__extra\">${points.speedBonus / constants.BONUS_POINTS_FOR_SPEED}&nbsp;<span class=\"stats__result stats__result--fast\"></span></td>\n          <td class=\"result__points\">×&nbsp;${constants.BONUS_POINTS_FOR_SPEED}</td>\n          <td class=\"result__total\">${points.speedBonus}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Бонус за жизни:</td>\n          <td class=\"result__extra\">${points.livesBonus / constants.BONUS_POINTS_FOR_LIVE}&nbsp;<span class=\"stats__result stats__result--alive\"></span></td>\n          <td class=\"result__points\">×&nbsp;${constants.BONUS_POINTS_FOR_LIVE}</td>\n          <td class=\"result__total\">${points.livesBonus}</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"result__extra\">Штраф за медлительность:</td>\n          <td class=\"result__extra\">${points.slowPenalty / constants.PENALTY_FOR_SLOWNESS}&nbsp;<span class=\"stats__result stats__result--slow\"></span></td>\n          <td class=\"result__points\">×&nbsp;${constants.PENALTY_FOR_SLOWNESS}</td>\n          <td class=\"result__total\">${points.slowPenalty}</td>\n        </tr>\n        <tr>\n          <td colspan=\"5\" class=\"result__total  result__total--final\">${points.total}</td>\n        </tr>\n      `\n    : ``}\n        </table>\n      </div>\n      ${this.state.stats ? this.state.stats.slice(0, -1).map(resultTable).join(``) : ``}\n    `;\n  }\n}\n\nexport default StatsScreenView;\n","import HeaderView from '../header/headerView';\nimport showScreen from '../showScreen';\nimport StatsScreenView from './statsScreenView';\n\nclass StatsScreenController {\n  constructor(application) {\n    this.application = application;\n    this.model = application.model;\n    this.screen = new StatsScreenView(this.model.state);\n    this.header = new HeaderView();\n  }\n\n  init() {\n    const stats = this.model.state.answers;\n    const lives = this.model.state.lives;\n\n    this.model.save({stats, lives})\n        .then(() => this.model.loadStatistics())\n        .then(() => showScreen(this.screen.element, this.header.element));\n    this.header.backClickHandler = () => {\n      this.model.resetState(this.model.state.questions, this.model.state.imagesData);\n      this.application.showIntro();\n    };\n  }\n}\n\nexport default StatsScreenController;\n","class AbstractAdapter {\n  toServer() {\n    throw Error(`Abstract method. Define toServer method`);\n  }\n}\n\nconst defaultAdapter = new class extends AbstractAdapter {\n  toServer(data) {\n    return JSON.stringify(data);\n  }\n}();\n\nclass AbstractModel {\n  get urlRead() {\n    throw new Error(`You have to define urlRead`);\n  }\n\n  get urlWrite() {\n    throw new Error(`You have to define urlWrite`);\n  }\n\n  get initialState() {\n    throw new Error(`You have to define initialState`);\n  }\n\n  load() {\n    return fetch(this.urlRead)\n        .then((response) => response.json())\n        .catch((error) => console.error(error));\n  }\n\n  save(data, adapter = defaultAdapter) {\n    return fetch(this.urlWrite, {\n      method: `POST`,\n      body: adapter.toServer(data),\n      headers: {\n        'Content-Type': `application/json`\n      }\n    });\n  }\n}\n\nexport default AbstractModel;\n","import AbstractModel from './abstractModel';\nimport * as constants from '../config/config';\n\nclass Model extends AbstractModel {\n  get urlRead() {\n    return `${constants.API_URL}/questions`;\n  }\n\n  get urlWrite() {\n    return `${constants.API_URL}/stats/:Andron1`;\n  }\n\n  get statsUrlRead() {\n    return `${constants.API_URL}/stats/:Andron1`;\n  }\n\n  get initialState() {\n    return {\n      name: null,\n      result: null,\n      time: constants.TIME_PER_SCREEN,\n      lives: constants.NUM_OF_LIVES,\n      answers: [],\n      questionNumber: 0,\n      questions: null,\n      imagesData: null,\n      stats: null\n    };\n  }\n\n  get state() {\n    if (!this._state) {\n      this._state = this.initialState;\n    }\n\n    return this._state;\n  }\n\n  set state(anotherState) {\n    this._state = anotherState;\n  }\n\n  resetState(questions, imagesData) {\n    this.state = Object.assign({}, this.initialState, {questions, imagesData});\n  }\n\n  load() {\n    return super.load()\n        .then((data) => {\n          this.state.questions = data;\n        });\n  }\n\n  loadStatistics() {\n    return fetch(this.statsUrlRead)\n        .then((response) => response.json())\n        .then((data) => {\n          this.state.stats = data;\n        });\n  }\n\n  changeState(answer) {\n    const time = this.initialState.time - this.state.time;\n    let result;\n\n    if (answer) {\n      if (time < constants.FAST_ASWER_TIME_UPPER_LIMIT) {\n        result = constants.Answer.FAST;\n      } else if (time >= constants.SLOW_ANSWER_TIME_BOTTOM_LIMIT) {\n        result = constants.Answer.SLOW;\n      } else {\n        result = constants.Answer.NORMAL;\n      }\n    } else {\n      result = constants.Answer.FAIL;\n    }\n\n    this.state = Object.assign({}, this.state, {\n      questionNumber: this.state.questionNumber + 1,\n      lives: this.state.lives - (answer ? 0 : 1),\n      answers: this.state.answers.concat(result),\n      time: this.initialState.time\n    });\n\n    if (!this.state.lives) {\n      this.state = Object.assign({}, this.state, {\n        result: constants.Result.LOSS\n      });\n    } else if (this.state.questionNumber === this.state.questions.length) {\n      this.state = (Object.assign({}, this.state, {\n        result: constants.Result.WIN\n      }));\n    }\n\n    return this.state;\n  }\n}\n\nexport default Model;\n","export const loadImage = (url) => {\n  return new Promise((resolve) => {\n    const img = document.createElement(`img`);\n\n    img.src = url;\n    img.addEventListener(`load`, () => {\n      const width = img.width;\n      const height = img.height;\n\n      resolve({url, width, height});\n    });\n    img.onerror = (evt) => resolve(evt.target.response);\n\n    setTimeout(resolve, 10000);\n  });\n};\n\nexport default loadImage;\n","import IntroScreenController from './intro/introScreenController';\nimport GameScreenController from './game/gameScreenController';\nimport StatsScreenController from './stats/statsScreenController';\nimport Model from './model/model';\nimport loadImage from './loadImage';\n\nconst ControllerId = {\n  INTRO: ``,\n  GAME: `game`,\n  STATS: `stats`\n};\n\nconst getControllerFromHash = (hash) => hash ? hash.slice(1) : ``;\n\nclass Application {\n  constructor() {\n    this._setup();\n    this.init();\n    this.model = new Model();\n    this.model.load()\n        .then(() => this.loadImages())\n        .then(() => {\n          this.intro.hidePreloader();\n          this.intro.showGreetingsScreen();\n        })\n        .catch(console.error);\n  }\n\n  _setup() {\n    this.routes = {\n      [ControllerId.INTRO]: IntroScreenController,\n      [ControllerId.GAME]: GameScreenController,\n      [ControllerId.STATS]: StatsScreenController,\n    };\n    window.addEventListener(`hashchange`, () => this._hashChangeHandler());\n  }\n\n  _hashChangeHandler() {\n    const controller = new this.routes[getControllerFromHash(location.hash)](this);\n\n    controller.init();\n  }\n  showIntro() {\n    console.log(this.model.state);\n    location.hash = ControllerId.INTRO;\n  }\n  showGame() {\n    location.hash = ControllerId.GAME;\n  }\n  showStats() {\n    location.hash = ControllerId.STATS;\n  }\n  init() {\n    this.intro = new this.routes[ControllerId.INTRO](this);\n    this.intro.init();\n    this.intro.showPreloader();\n    this.intro.hideGreetingsScreen();\n  }\n  loadImages() {\n    const urls = new Set();\n    const promises = [];\n    this.model.state.questions.forEach((item) => item.answers.forEach((answer) => urls.add(answer.image.url)));\n    const imagesData = [];\n\n    for (const url of urls) {\n      promises.push(loadImage(url)\n          .then((imageData) => imagesData.push(imageData))\n      );\n    }\n\n    this.model.state.imagesData = imagesData;\n\n    return Promise.all(promises);\n  }\n}\n\nexport default Application;\n"],"names":["abstractView","constants.Answer","constants.NUM_OF_QUESTIONS","constants.AnswerType","constants.QuestionType","constants.POINTS_FOR_RIGHT_ANSWER","constants.BONUS_POINTS_FOR_SPEED","constants.PENALTY_FOR_SLOWNESS","constants.BONUS_POINTS_FOR_LIVE","constants.Result","constants.API_URL","constants.TIME_PER_SCREEN","constants.NUM_OF_LIVES","constants.FAST_ASWER_TIME_UPPER_LIMIT","constants.SLOW_ANSWER_TIME_BOTTOM_LIMIT"],"mappings":"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"}