{"version":3,"file":"firstGameScreenView.js","sources":["js/getElement.js","js/view/abstractView.js","js/config/config.js","js/templates/gameStats.js","js/game/firstGameScreenView.js"],"sourcesContent":["const getElementFromTemplate = (template) => {\n  const div = document.createElement(`div`);\n\n  div.innerHTML = template;\n\n  return div.children.length > 1 ? div : div.firstElementChild;\n};\n\nexport default getElementFromTemplate;\n","import getElementFromTemplate from '../getElement';\n\nclass AbstractView {\n  get template() {\n    throw new Error(`You have to define template`);\n  }\n\n  _render() {\n    return getElementFromTemplate(this.template.trim());\n  }\n\n  _bind() {}\n\n  get element() {\n    if (!this._element) {\n      this._element = this._render();\n      this._bind();\n    }\n\n    return this._element;\n  }\n}\n\nexport default AbstractView;\n","const NUM_OF_LIVES = 3;\nconst TIME_PER_SCREEN = 30;\nconst POINTS_FOR_RIGHT_ANSWER = 100;\nconst BONUS_POINTS_FOR_SPEED = 50;\nconst BONUS_POINTS_FOR_LIVE = 50;\nconst PENALTY_FOR_SLOWNESS = 50;\nconst SLOW_ANSWER_TIME_BOTTOM_LIMIT = 20;\nconst FAST_ASWER_TIME_UPPER_LIMIT = 10;\nconst NUM_OF_QUESTIONS = 10;\nconst API_URL = `https://es.dump.academy/pixel-hunter`;\n\nconst QuestionType = {\n  TWO_OF_TWO: `two-of-two`,\n  TINDER_LIKE: `tinder-like`,\n  ONE_OF_THREE: `one-of-three`\n};\n\nconst Answer = {\n  FAIL: `fail`,\n  SLOW: `slow`,\n  NORMAL: `right`,\n  FAST: `fast`\n};\nconst Result = {\n  LOSS: `loss`,\n  WIN: `win`\n};\n\nconst AnswerType = {\n  PAINTING: `painting`,\n  PHOTO: `photo`\n};\n\nexport {\n  NUM_OF_LIVES,\n  TIME_PER_SCREEN,\n  POINTS_FOR_RIGHT_ANSWER,\n  BONUS_POINTS_FOR_SPEED,\n  BONUS_POINTS_FOR_LIVE,\n  PENALTY_FOR_SLOWNESS,\n  SLOW_ANSWER_TIME_BOTTOM_LIMIT,\n  FAST_ASWER_TIME_UPPER_LIMIT,\n  NUM_OF_QUESTIONS,\n  API_URL,\n  QuestionType,\n  AnswerType,\n  Answer,\n  Result\n};\n","import * as constants from '../config/config';\n\nconst router = {\n  [constants.Answer.SLOW]: `<li class=\"stats__result stats__result--slow\"></li>`,\n  [constants.Answer.NORMAL]: `<li class=\"stats__result stats__result--correct\"></li>`,\n  [constants.Answer.FAST]: `<li class=\"stats__result stats__result--fast\"></li>`,\n  [constants.Answer.FAIL]: `<li class=\"stats__result stats__result--wrong\"></li>`\n};\n\nconst gameStats = (answers) => `\n  <ul class=\"stats\">\n    ${answers.map((answer) => router[answer]).join(``)}\n    ${new Array(constants.NUM_OF_QUESTIONS - answers.length)\n      .fill(`<li class=\"stats__result stats__result--unknown\"></li>`)\n      .join(``)}\n  </ul>\n`;\n\nexport default gameStats;\n","import abstractView from '../view/abstractView';\nimport gameStats from '../templates/gameStats';\nimport * as constants from '../config/config';\n\nclass FirstGameScreenView extends abstractView {\n  constructor(state) {\n    super();\n    this.state = state;\n  }\n\n  get template() {\n    const game = this.state.questions[this.state.questionNumber];\n\n    const question = (item, index) => `\n      <div class=\"game__option\">\n        <img src=${item.image.url} alt=\"Option ${index}\" width=\"468\" height=\"458\">\n        <label class=\"game__answer  game__answer--photo\">\n          <input name=\"question${index + 1}\" type=\"radio\" value=${constants.AnswerType.PHOTO}>\n          <span>Фото</span>\n        </label>\n        <label class=\"game__answer  game__answer--paint\">\n          <input name=\"question${index + 1}\" type=\"radio\" value=${constants.AnswerType.PAINTING}>\n          <span>Рисунок</span>\n        </label>\n      </div>\n    `;\n\n    return `\n      <div class=\"game\">\n        <p class=\"game__task\">${game.question}</p>\n        <form class=\"game__content\">\n          ${game.answers.map(question).join(``)}\n        </form>\n        <div class=\"stats\">${gameStats(this.state.answers).trim()}</div>\n      </div>\n    `;\n  }\n\n  _bind() {\n    const form = this.element.querySelector(`.game__content`);\n    const inputs = form.querySelectorAll(`input[type=\"radio\"]`);\n\n    [...inputs].forEach((input) => input.addEventListener(`change`, () => {\n      const value1 = form.question1.value;\n      const value2 = form.question2.value;\n\n      if (!(value1 && value2)) {\n        return false;\n      }\n\n      const game = this.state.questions[this.state.questionNumber];\n      const answer = value1 === game.answers[0][`type`] && value2 === game.answers[1][`type`];\n\n      this.answerHandler(answer);\n\n      return answer;\n    }));\n  }\n\n  answerHandler() {}\n}\n\nexport default FirstGameScreenView;\n"],"names":["constants.Answer","constants.NUM_OF_QUESTIONS","abstractView","constants.AnswerType"],"mappings":"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"}